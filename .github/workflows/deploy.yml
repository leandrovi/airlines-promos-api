name: Deploy API with Prisma Migrations

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 4
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/airlines-promos
    steps:
      - name: Checkout Test Repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Dependencies
        run: pnpm install
      - name: Run Database Push
        run: pnpm run db:push
      - name: Run Tests
        run: npx jest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v2
      - name: Test Doppler CLI
        run: doppler --version
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - name: Install Dependencies
        run: pnpm install
      - name: Run Production Migrations
        run: pnpm run migrate:deploy
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - name: Setup fly.io
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy via fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
